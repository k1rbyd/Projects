import java.sql.*;
import java.util.Scanner;

public class base {

    private static final String HOST = "localhost";
    private static final String USER = "root";
    private static final String PASS = "Qwerty#80085";
    private static final String DATABASE_NAME = "PROJECT2";

    public static void main(String[] args) {
        try (Connection conn = getConnection()) {
            Scanner scanner = new Scanner(System.in);
            welcomeUser(scanner);

            int option = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (option) {
                case 1:
                    buyProducts(conn, scanner);
                    break;
                case 2:
                    sellProducts(conn, scanner);
                    break;
                default:
                    System.out.println("Invalid option.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static Connection getConnection() {
        try {
            return DriverManager.getConnection("jdbc:mysql://" + HOST + ":3306/" + DATABASE_NAME, USER, PASS);
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }

    private static void welcomeUser(Scanner scanner) {
        System.out.println("Welcome to ShopApp!");
        System.out.println("1. Buy Products");
        System.out.println("2. Sell Products");
        System.out.print("Select an option (1/2): ");
    }

    private static void buyProducts(Connection conn, Scanner scanner) {
        System.out.print("Enter the product to search: ");
        String productName = scanner.nextLine();

        String[] shops = { "shop1", "shop2", "shop3" };

        // Check if the product is available in any shop
        boolean productAvailable = false;

        // Display the shops where the product is available
        System.out.println("Shops where " + productName + " is available:");
        System.out.println("------------------------");

        for (String shop : shops) {
            int availableQuantity = displayShopInfo(conn, shop, productName);
            if (availableQuantity > 0) {
                System.out.println(shop);
                System.out.println("Available Quantity: " + availableQuantity);
                System.out.println();
                productAvailable = true;
            }
        }

        if (!productAvailable) {
            System.out.println("The product is not available in any shop.");
            return; // Exit the method if the product is not available
        }

        // Prompt the user to select a shop and enter the quantity required
        System.out.print("Enter the shop from which you want to purchase " + productName + ": ");
        String selectedShop = scanner.nextLine();

        System.out.print("Enter the quantity required: ");
        int requiredQuantity = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        // Place the order and calculate the total price
        int totalPrice = orderProductFromShop(conn, selectedShop, productName, requiredQuantity);

        // Display the order summary
        System.out.println("Ordered from " + selectedShop);
        System.out.println("Total Price: $" + totalPrice);
    }

    private static void sellProducts(Connection conn, Scanner scanner) {
        System.out.print("Enter the product to sell: ");
        String productName = scanner.nextLine();

        String[] shops = { "shop1", "shop2", "shop3" };

        // Display the shops where the product can be sold
        System.out.println("Shops where you can sell " + productName + ":");
        System.out.println("------------------------");

        for (String shop : shops) {
            int availableQuantity = displayShopInfo(conn, shop, productName);
            if (availableQuantity > 0) {
                System.out.println(shop);
                System.out.println("Available Quantity: " + availableQuantity);
                System.out.println();
            }
        }

        // Prompt the user to select a shop and enter the quantity to sell
        System.out.print("Enter the shop where you want to sell " + productName + ": ");
        String selectedShop = scanner.nextLine();

        System.out.print("Enter the quantity to sell: ");
        int soldQuantity = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        // Sell the product and update the quantity in the shop
        int updatedQuantity = sellProductToShop(conn, selectedShop, productName, soldQuantity);

        // Display the updated quantity
        System.out.println("Sold to " + selectedShop);
        System.out.println("Updated Quantity: " + updatedQuantity);
    }

    private static int displayShopInfo(Connection conn, String shop, String productName) {
        String query = "SELECT * FROM " + shop + " WHERE productname = ?";
        int availableQuantity = 0;
        int price = 0;

        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, productName);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    availableQuantity = rs.getInt("quantity");
                    price = rs.getInt("price");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        if (availableQuantity > 0) {
            System.out.println(shop);
            System.out.println("Available Quantity: " + availableQuantity);
            System.out.println("Price: $" + price);
            System.out.println();
        }

        return availableQuantity;
    }

    private static int orderProductFromShop(Connection conn, String shop, String productName, int quantity) {
        // Implement the logic to place an order and calculate the total price here
        // You can update the quantity and calculate the price based on your business logic
        // For simplicity, let's assume a fixed price of $10 per unit
        int pricePerUnit = 10;
        int totalPrice = pricePerUnit * quantity;

        // Update the quantity in the shop
        String updateQuery = "UPDATE " + shop + " SET quantity = quantity - ? WHERE productname = ?";
        try (PreparedStatement ps = conn.prepareStatement(updateQuery)) {
            ps.setInt(1, quantity);
            ps.setString(2, productName);
            ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return totalPrice;
    }

    private static int sellProductToShop(Connection conn, String shop, String productName, int quantity) {
        // Implement the logic to sell a product and update the quantity in the shop
        // For simplicity, let's assume the product is bought at $8 per unit
        int pricePerUnit = 8;
        int totalPrice = pricePerUnit * quantity;

        // Update the quantity in the shop
        String updateQuery = "UPDATE " + shop + " SET quantity = quantity + ? WHERE productname = ?";
        try (PreparedStatement ps = conn.prepareStatement(updateQuery)) {
            ps.setInt(1, quantity);
            ps.setString(2, productName);
            ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return totalPrice;
    }
}
