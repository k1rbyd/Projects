import java.sql.*;
import java.util.Scanner;

public class base {

    private static final String HOST = "localhost";
    private static final String USER = "root";
    private static final String PASS = "Qwerty#80085";
    private static final String DATABASE_NAME = "PROJECT2";

    public static void main(String[] args) {
        try {
            Connection conn = getConnection();
            if (conn != null) {
                Scanner scanner = new Scanner(System.in);

                System.out.print("Enter the product to search: ");
                String productName = scanner.nextLine();

                String[] shops = { "shop1", "shop2", "shop3" };

                System.out.println("Shops where the product is available:");
                System.out.println("------------------------------------");

                for (String shop : shops) {
                    displayShopInfo(conn, shop, productName);
                }

                System.out.print("Enter the shop to order from: ");
                String selectedShop = scanner.nextLine();

                if (isProductAvailableInShop(conn, selectedShop, productName)) {
                    int totalPrice = orderProductFromShop(conn, selectedShop, productName);
                    System.out.println("Ordered from " + selectedShop);
                    System.out.println("Total Price: $" + totalPrice);
                } else {
                    System.out.println("Product not available in the selected shop.");
                }

                conn.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static Connection getConnection() {
        try {
            return DriverManager.getConnection("jdbc:mysql://" + HOST + ":3306/" + DATABASE_NAME, USER, PASS);
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }

    private static void displayShopInfo(Connection conn, String shop, String productName) {
        String query = "SELECT * FROM " + shop + " WHERE productname = ?";
        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, productName);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int quantity = rs.getInt("quantity");
                    int price = rs.getInt("price");

                    System.out.println(shop);
                    System.out.println("Quantity: " + quantity);
                    System.out.println("Price: $" + price);
                    System.out.println();
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static boolean isProductAvailableInShop(Connection conn, String shop, String productName) {
        String query = "SELECT * FROM " + shop + " WHERE productname = ?";
        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, productName);
            try (ResultSet rs = ps.executeQuery()) {
                return rs.next();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    private static int orderProductFromShop(Connection conn, String shop, String productName) {
        String query = "UPDATE " + shop + " SET quantity = quantity - 1 WHERE productname = ?";
        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, productName);
            int rowsUpdated = ps.executeUpdate();
            if (rowsUpdated > 0) {
                // Fetch the price from the database
                int price = fetchProductPrice(conn, shop, productName);
                return price;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    private static int fetchProductPrice(Connection conn, String shop, String productName) {
        String query = "SELECT price FROM " + shop + " WHERE productname = ?";
        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, productName);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return rs.getInt("price");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0; // Default price if not found
    }
}
